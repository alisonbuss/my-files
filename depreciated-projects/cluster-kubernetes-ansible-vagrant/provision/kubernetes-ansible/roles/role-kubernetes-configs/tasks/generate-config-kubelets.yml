---
#-----------------------|DOCUMENTATION|-----------------------#
# @descr: Generate Kubernetes configuration files for authentication 
#         Kubelets(Workers) Client on a Kubernetes API Server.
# @fonts: https://github.com/githubixx/ansible-kubernetes-playbooks/blob/master/kubeauthconfig/kubelets.yml
#-------------------------------------------------------------#

- name: "Get IP address of first host in (cluster-k8s-master) group and use as API server"
  set_fact:
    var_ipv4_address_first_master: |
      {% set item = groups[k8s_configs_master_group_name][0] %}
      {{ hostvars[item]['ansible_' + k8s_configs_master_interface].ipv4.address }}

- name: "Remove newline from API server IP address"
  set_fact:
    var_ipv4_address_first_master: "{{ var_ipv4_address_first_master | replace('\n', '') }}"

- name: "Output of hostnames/IPs of first host in (cluster-k8s-master) group"
  debug: var=var_ipv4_address_first_master

- name: "Generate a kubeconfig file for each worker node (set-cluster)"
  vars:
    var_worker_hostname: "{{ hostvars[item]['ansible_hostname'] }}"
  shell: |
      kubectl config set-cluster {{k8s_configs_cluster_name}} \
              --certificate-authority={{k8s_ca_source_directory}}/{{k8s_configs_apiserver_ca_pem_file}} \
              --embed-certs=true \
              --server=https://{{var_ipv4_address_first_master}}:6443 \
              --kubeconfig={{k8s_configs_source_directory}}/kubelet-{{var_worker_hostname}}.kubeconfig
  with_inventory_hostnames:
    - "{{ k8s_configs_worker_group_name }}"

- name: "Generate a kubeconfig file for each worker node (set-credentials)"
  vars:
    var_worker_hostname: "{{ hostvars[item]['ansible_hostname'] }}"
  shell: |
      kubectl config set-credentials system:node:{{var_worker_hostname}} \
              --client-certificate={{k8s_ca_source_directory}}/{{ k8s_configs_kubelet_cert_pem_file | replace('####', var_worker_hostname) }} \
              --client-key={{k8s_ca_source_directory}}/{{ k8s_configs_kubelet_cert_key_pem_file | replace('####', var_worker_hostname) }} \
              --embed-certs=true \
              --kubeconfig={{k8s_configs_source_directory}}/kubelet-{{var_worker_hostname}}.kubeconfig
  with_inventory_hostnames:
    - "{{ k8s_configs_worker_group_name }}"

- name: "Generate a kubeconfig file for each worker node (set-context)"
  vars:
    var_worker_hostname: "{{ hostvars[item]['ansible_hostname'] }}"
  shell: |
      kubectl config set-context default \
              --cluster={{k8s_configs_cluster_name}} \
              --user=system:node:{{var_worker_hostname}} \
              --kubeconfig={{k8s_configs_source_directory}}/kubelet-{{var_worker_hostname}}.kubeconfig
  with_inventory_hostnames:
    - "{{ k8s_configs_worker_group_name }}"

- name: "Set use-context"
  vars:
    var_worker_hostname: "{{ hostvars[item]['ansible_hostname'] }}"
  shell: "kubectl config use-context default --kubeconfig={{k8s_configs_source_directory}}/kubelet-{{var_worker_hostname}}.kubeconfig"
  with_inventory_hostnames:
    - "{{ k8s_configs_worker_group_name }}"

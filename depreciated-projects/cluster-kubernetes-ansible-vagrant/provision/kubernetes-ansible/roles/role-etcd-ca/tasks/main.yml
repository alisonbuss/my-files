---
#-----------------------|DOCUMENTATION|-----------------------#
# @descr: Generates certificate authority and certificates needed for Etcd
# @fonts: https://github.com/githubixx/ansible-role-kubernetes-ca
#         https://coreos.com/os/docs/latest/generate-self-signed-certificates.html
#         https://www.tauceti.blog/post/kubernetes-the-not-so-hard-way-with-ansible-at-scaleway-part-4/
#         http://play.etcd.io/install
#-------------------------------------------------------------#

# Print the current operating system and the supported systems in the role.
- name: "Output: View current system and supported systems by the role"
  debug:
    msg: "--Current System:[{{system_current}}] --System Supported:[{{system_support_centos}},{{system_support_ubuntu}}]"

- name: "Create directory for CA and certificate files (etcd)"
  file:
    path: "{{etcd_ca_source_directory}}"
    state: directory

- name: "Generate list of IP addresses and hostnames needed for etcd certificate"
  set_fact:
    var_tmp_etcd_hosts: |
      {% set comma = joiner(",") %}
      {% for host in groups[etcd_ca_group_name] -%}
        {{ comma() }}{{ hostvars[host]["ansible_hostname"] }}
        {{ comma() }}{{ hostvars[host]['ansible_' + etcd_ca_interface].ipv4.address }}
      {%- endfor %}
      {% for item in etcd_ca_cert_hosts -%}
        {{ comma() }}{{ item }}
      {%- endfor %}

- name: "Remove newline from etcd hosts list"
  set_fact:
    var_etcd_hosts: "{{ var_tmp_etcd_hosts | replace('\n', '') | replace(' ', '') }}"

- name: "Output of hostnames/IPs used for etcd certificate"
  debug: var=var_etcd_hosts

- name: "Create the etcd CA configuration file"
  template:
    src: "../templates/ca-etcd-config.json.j2"
    dest: "{{etcd_ca_source_directory}}/{{ etcd_ca_files_name.ca_config_json }}.json"

- name: "Create the etcd CA certificate request file root (CSR)"
  template:
    src: "../templates/ca-etcd-csr.json.j2"
    dest: "{{etcd_ca_source_directory}}/{{ etcd_ca_files_name.ca_csr_json }}.json"

- name: "Create the etcd key CSR file"
  template:
    src: "../templates/cert-etcd-csr.json.j2"
    dest: "{{etcd_ca_source_directory}}/{{ etcd_ca_files_name.cert_csr_json }}.json"

- name: "Generate the etcd CA and private key"
  shell: "cfssl gencert -initca {{ etcd_ca_files_name.ca_csr_json }}.json | cfssljson -bare {{ etcd_ca_files_name.ca_pem }}"
  args:
    chdir: "{{etcd_ca_source_directory}}"
    creates: "{{etcd_ca_source_directory}}/{{ etcd_ca_files_name.ca_key_pem }}.pem"

- name: "Generate TLS certificate for etcd"
  shell: |
      cfssl gencert \
            -ca={{ etcd_ca_files_name.ca_pem }}.pem \
            -ca-key={{ etcd_ca_files_name.ca_key_pem }}.pem \
            -config={{ etcd_ca_files_name.ca_config_json }}.json \
            -hostname={{var_etcd_hosts}} \
            -profile=etcd {{ etcd_ca_files_name.cert_csr_json }}.json | cfssljson -bare {{ etcd_ca_files_name.cert_pem }}
  args:
    chdir: "{{etcd_ca_source_directory}}"
    creates: "{{etcd_ca_source_directory}}/{{ etcd_ca_files_name.cert_key_pem }}.pem"

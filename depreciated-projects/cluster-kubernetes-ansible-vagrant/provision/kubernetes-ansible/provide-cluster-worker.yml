---
#-----------------------|DOCUMENTATION|-----------------------#
# @descr: 
# @fonts: 
#-------------------------------------------------------------#

# 1ª) Step:
- name: "Provide firewall security criteria through IpTables (All hosts K8s Worker)"
  hosts: "cluster_worker"
  become: true
  vars_files:
    - "{{ global_vars_file.public }}"
    - "{{ global_vars_file.system }}"
    - "{{ global_vars_file.ssh_deploy }}"
  vars:
    system_current: "{{ global_system }}"
  roles:
    - role: role-security-iptables
      vars:
        security_ip4tables_log_enable: true
        security_ip4tables_rules_overwrite: |
          *filter
          :INPUT DROP [0:0]
          :FORWARD DROP [0:0]
          :OUTPUT ACCEPT [0:0]
          # Accept all loopback (local) traffic:
          -A INPUT -i lo -j ACCEPT
          # Keep existing connections (like our SSH session) alive:
          -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
          # Accept all TCP/IP traffic to SSH
          -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
          # Accept pings:
          -A INPUT -p icmp -m icmp --icmp-type 0 -j ACCEPT
          -A INPUT -p icmp -m icmp --icmp-type 3 -j ACCEPT
          -A INPUT -p icmp -m icmp --icmp-type 11 -j ACCEPT
          # Enable Iptables LOG
          -A INPUT   -j LOG --log-level 4 --log-prefix "IPTABLE-IPV4-INPUT----> " 
          -A FORWARD -j LOG --log-level 4 --log-prefix "IPTABLE-IPV4-FORWARD--> " 
          -A OUTPUT  -j LOG --log-level 4 --log-prefix "IPTABLE-IPV4-OUTPUT---> " 
          COMMIT
      tags: security-iptables
  tags:
    - kubernetes-worker
    - kubernetes-security

# 2ª) Step:
- name: "Provisioning tools and services (rkt, flannel, docker, kube-proxy, kubelet)"
  hosts: "cluster_worker"
  become: true
  vars_files:
    - "{{ global_vars_file.public }}"
    - "{{ global_vars_file.system }}"
    - "{{ global_vars_file.ssh_deploy }}"
  vars:
    system_current: "{{ global_system }}"
  roles:
    - role: role-rkt
      vars:
        rkt_version: "{{ global_version.rkt }}"
      tags: rkt

    - role: role-flannel
      vars:
        etcd_ca_source_directory: "{{ global_source_directory.etcd_ca }}"
        etcd_group_name: "{{ global_host_group.etcd }}"
        etcd_interface: "{{ global_interface.etcd }}"
        flannel_interface: "{{ global_interface.worker }}"
        flannel_version: "{{ global_version.flannel }}"
      tags: flannel 

    - role: role-docker
      vars:
        docker_version: "{{ global_version.docker }}"
      tags: docker
    
    - role: role-kubernetes-worker
      vars:
        k8s_ca_source_directory: "{{ global_source_directory.k8s_ca }}"
        k8s_configs_source_directory: "{{ global_source_directory.k8s_configs }}"

        k8s_master_group_name: "{{ global_host_group.master }}"
        k8s_master_interface: "{{ global_interface.master }}"

        k8s_worker_group_name: "{{ global_host_group.worker }}"
        k8s_worker_interface: "{{ global_interface.worker }}"

        k8s_version: "{{ global_version.k8s }}"
      tags: kubernetes-worker-install
  tags:
    - kubernetes-worker
    - kubernetes-install

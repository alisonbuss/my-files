---
#-----------------------|DOCUMENTATION|-----------------------#
# @descr: Apply basic security settings such as: (User creation, Privileges, 
#         Settings in sysctl, sshd and iptables)
# @fonts: https://github.com/githubixx/ansible-role-harden-linux
#         https://www.linode.com/docs/security/firewalls/control-network-traffic-with-iptables/
#         https://www.digitalocean.com/community/tutorials/how-to-isolate-servers-within-a-private-network-using-iptables
#         https://www.booleanworld.com/depth-guide-iptables-linux-firewall/
#         https://medium.com/@jasonrigden/hardening-ssh-1bcb99cd4cef
#         https://www.tauceti.blog/post/kubernetes-the-not-so-hard-way-with-ansible-at-scaleway-part-2/
#         http://docs.ansible.com/ansible/latest/modules/user_module.html
#         http://docs.ansible.com/ansible/latest/modules/authorized_key_module.html
#         http://docs.ansible.com/ansible/latest/modules/sysctl_module.html
#         http://bencane.com/2012/09/17/iptables-linux-firewall-rules-for-a-basic-web-server/
#         http://engineering.invisionapp.com/post/coreos-system-logs/
#-------------------------------------------------------------#

# Print the current operating system and the supported systems in the role.
- name: "Output: View current system and supported systems by the role"
  debug:
    msg: "--Current System:[{{system_current}}] --System Supported:[{{system_support_centos}},{{system_support_ubuntu}},{{system_support_coreos}}]"




# ISSUE NOTICE:
- name: "SUB TASK : [ security_remote_access_users... ]"
  vars:
    var_user: "{{ item.0.user }}"
    var_authorized_key: "{{ item.1 }}"
  debug:
    msg: "USER: {{ var_user }} -- KEY: {{ var_authorized_key }}"
  with_subelements:
    - "{{ security_remote_access_users | rejectattr('ssh_authorized_keys', 'undefined') | list }}"
    - "ssh_authorized_keys"



# # Defining remote access users.
# - import_tasks: config-remote-access-users.yml
#   when: 
#     - (system_current == system_support_centos) or
#       (system_current == system_support_ubuntu) or 
#       (system_current == system_support_coreos)

# # Configure remote access security through SSHD.
# - import_tasks: config-sshd.yml
#   when: 
#     - (system_current == system_support_centos) or
#       (system_current == system_support_ubuntu) or 
#       (system_current == system_support_coreos)
